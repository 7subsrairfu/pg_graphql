begin;
	-- Check SQL output
	select graphql.to_cursor_clause(
		'abc',
		array[('email', 'asc', true), ('id', 'asc', false)]::graphql.column_order[]
	);
                                     to_cursor_clause                                      
-------------------------------------------------------------------------------------------
 (                                                                                        +
                                 '{"(email,asc,t)","(id,asc,f)"}'::graphql.column_order[],+
                                 jsonb_build_array(to_jsonb(abc.email), to_jsonb(abc.id)) +
                         )::graphql.cursor
(1 row)

	
	-- Check encode/decode round trip	
    with c(ursor) as (
        select 
            '("{""(email,asc,t)"",""(id,asc,f)""}","[""aardvark@x.com"", 1]")'::graphql.cursor
    )
    select 	
        c.ursor =
        graphql.decode(
            graphql.encode(
                c.ursor::graphql.cursor
            )
        )
    from c;
 ?column? 
----------
 t
(1 row)

rollback
